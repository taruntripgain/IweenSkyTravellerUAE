<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="27" passed="18" failed="9" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-25T17:34:04 IST" name="iween Test Suite" finished-at="2025-08-25T18:47:38 IST" duration-ms="4414254">
    <groups>
    </groups>
    <test started-at="2025-08-25T17:34:04 IST" name=" onway Tests" finished-at="2025-08-25T18:47:38 IST" duration-ms="4414254">
      <class name="com.iween.testcase.TCCP_11">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:34:05 IST" name="setup" finished-at="2025-08-25T17:34:08 IST" duration-ms="3033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:34:08 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:35:30 IST" duration-ms="82030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=kamair, SKIP=, Depart From=KBL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:35:30 IST" name="tearDown" finished-at="2025-08-25T17:35:30 IST" duration-ms="368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:35:30 IST" name="setup" finished-at="2025-08-25T17:35:32 IST" duration-ms="2203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:35:32 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:37:21 IST" duration-ms="109135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=MZR, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=kamair, SKIP=, Depart From=IST, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:37:21 IST" name="tearDown" finished-at="2025-08-25T17:37:22 IST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:37:22 IST" name="setup" finished-at="2025-08-25T17:37:24 IST" duration-ms="2162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:37:24 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:39:28 IST" duration-ms="124548" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=kamair, SKIP=, Depart From=KDH, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.skytraveller.pageObjects.ResultPage.validateResultPage1(ResultPage.java:147)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:142)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:39:28 IST" name="tearDown" finished-at="2025-08-25T17:39:29 IST" duration-ms="494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:39:29 IST" name="setup" finished-at="2025-08-25T17:39:31 IST" duration-ms="2033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:39:31 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:41:36 IST" duration-ms="124824" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=KHT, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=kamair, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.skytraveller.pageObjects.ResultPage.validateResultPage1(ResultPage.java:147)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:142)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:41:36 IST" name="tearDown" finished-at="2025-08-25T17:41:36 IST" duration-ms="431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:41:36 IST" name="setup" finished-at="2025-08-25T17:41:38 IST" duration-ms="1924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:41:38 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:46:28 IST" duration-ms="290305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=BRU, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=biletbank, SKIP=, Depart From=IST, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:46:28 IST" name="tearDown" finished-at="2025-08-25T17:46:29 IST" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:46:29 IST" name="setup" finished-at="2025-08-25T17:46:31 IST" duration-ms="2074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:46:31 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:50:14 IST" duration-ms="223330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=IST, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=biletbank, SKIP=, Depart From=DUS, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:50:14 IST" name="tearDown" finished-at="2025-08-25T17:50:15 IST" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:50:15 IST" name="setup" finished-at="2025-08-25T17:50:17 IST" duration-ms="2095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:50:17 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:56:00 IST" duration-ms="342921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=FRA, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=biletbank, SKIP=, Depart From=IST, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:56:00 IST" name="tearDown" finished-at="2025-08-25T17:56:00 IST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:56:00 IST" name="setup" finished-at="2025-08-25T17:56:02 IST" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:56:02 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:56:55 IST" duration-ms="52920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=HEA, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flyariana, SKIP=, Depart From=KBL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:56:55 IST" name="tearDown" finished-at="2025-08-25T17:56:56 IST" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:56:56 IST" name="setup" finished-at="2025-08-25T17:57:00 IST" duration-ms="4388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:57:00 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:58:23 IST" duration-ms="82615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flyariana, SKIP=, Depart From=KBL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:58:23 IST" name="tearDown" finished-at="2025-08-25T17:58:23 IST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:58:23 IST" name="setup" finished-at="2025-08-25T17:58:27 IST" duration-ms="3742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:58:27 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T17:59:20 IST" duration-ms="53227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=KBL, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flyariana, SKIP=, Depart From=MZR, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:59:20 IST" name="tearDown" finished-at="2025-08-25T17:59:21 IST" duration-ms="471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:59:21 IST" name="setup" finished-at="2025-08-25T17:59:26 IST" duration-ms="5745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T17:59:26 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:00:44 IST" duration-ms="77582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=HEA, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flyariana, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:00:44 IST" name="tearDown" finished-at="2025-08-25T18:00:44 IST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:00:44 IST" name="setup" finished-at="2025-08-25T18:00:48 IST" duration-ms="3889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:00:48 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:06:31 IST" duration-ms="343036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=SIN, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=emirates, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:06:31 IST" name="tearDown" finished-at="2025-08-25T18:06:32 IST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:06:32 IST" name="setup" finished-at="2025-08-25T18:06:37 IST" duration-ms="5695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:06:37 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:09:07 IST" duration-ms="149487" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=FRA, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=emirates, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.skytraveller.pageObjects.ResultPage.validateResultPage1(ResultPage.java:154)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:142)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:09:07 IST" name="tearDown" finished-at="2025-08-25T18:09:07 IST" duration-ms="454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:09:07 IST" name="setup" finished-at="2025-08-25T18:09:09 IST" duration-ms="2118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:09:09 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:10:27 IST" duration-ms="78140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=IST, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=emirates, SKIP=, Depart From=KBL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:10:27 IST" name="tearDown" finished-at="2025-08-25T18:10:28 IST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:10:28 IST" name="setup" finished-at="2025-08-25T18:10:30 IST" duration-ms="2227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:10:30 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:12:36 IST" duration-ms="125935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=HKG, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=emirates, SKIP=, Depart From=DEL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:12:36 IST" name="tearDown" finished-at="2025-08-25T18:12:36 IST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:12:36 IST" name="setup" finished-at="2025-08-25T18:12:39 IST" duration-ms="2077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:12:39 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:15:35 IST" duration-ms="176143" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=amadeus, SKIP=, Depart From=BOM, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details content mismatch. Check ExtentReport for full comparison.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details content mismatch. Check ExtentReport for full comparison.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.BookingPage.validateFlightDetailsContentMatch(BookingPage.java:2243)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:15:35 IST" name="tearDown" finished-at="2025-08-25T18:15:35 IST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:15:35 IST" name="setup" finished-at="2025-08-25T18:15:37 IST" duration-ms="2356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:15:37 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:16:50 IST" duration-ms="72565" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=IST, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=amadeus, SKIP=, Depart From=AUH, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details mismatch. See ExtentReport for breakdown.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details mismatch. See ExtentReport for breakdown.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.FlightDetails.validateFlightCardAndFlightDetails(FlightDetails.java:641)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:217)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:16:50 IST" name="tearDown" finished-at="2025-08-25T18:16:50 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:16:50 IST" name="setup" finished-at="2025-08-25T18:16:52 IST" duration-ms="1922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:16:52 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:19:02 IST" duration-ms="129519" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DOH, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=amadeus, SKIP=, Depart From=IST, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details content mismatch. Check ExtentReport for full comparison.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details content mismatch. Check ExtentReport for full comparison.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.BookingPage.validateFlightDetailsContentMatch(BookingPage.java:2243)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:19:02 IST" name="tearDown" finished-at="2025-08-25T18:19:02 IST" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:19:02 IST" name="setup" finished-at="2025-08-25T18:19:04 IST" duration-ms="2101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:19:04 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:22:34 IST" duration-ms="209547" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=amadeus, SKIP=, Depart From=SIN, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details content mismatch. Check ExtentReport for full comparison.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details content mismatch. Check ExtentReport for full comparison.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.BookingPage.validateFlightDetailsContentMatch(BookingPage.java:2243)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:22:34 IST" name="tearDown" finished-at="2025-08-25T18:22:34 IST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:22:34 IST" name="setup" finished-at="2025-08-25T18:22:36 IST" duration-ms="2057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:22:36 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:24:05 IST" duration-ms="88362" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flydubai, SKIP=, Depart From=KBL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details mismatch. See ExtentReport for breakdown.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details mismatch. See ExtentReport for breakdown.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.FlightDetails.validateFlightCardAndFlightDetails(FlightDetails.java:641)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:217)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:24:05 IST" name="tearDown" finished-at="2025-08-25T18:24:05 IST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:24:05 IST" name="setup" finished-at="2025-08-25T18:24:07 IST" duration-ms="2073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:24:07 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:29:26 IST" duration-ms="319085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=SIN, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flydubai, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:29:26 IST" name="tearDown" finished-at="2025-08-25T18:29:26 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:29:26 IST" name="setup" finished-at="2025-08-25T18:29:28 IST" duration-ms="2024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:29:28 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:30:56 IST" duration-ms="87449" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=KBL, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flydubai, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Flight details mismatch. See ExtentReport for breakdown.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Flight details mismatch. See ExtentReport for breakdown.
at org.testng.Assert.fail(Assert.java:111)
at com.skytraveller.pageObjects.FlightDetails.validateFlightCardAndFlightDetails(FlightDetails.java:641)
at com.iween.testcase.TCCP_11.myTest(TCCP_11.java:217)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:30:56 IST" name="tearDown" finished-at="2025-08-25T18:30:56 IST" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:30:56 IST" name="setup" finished-at="2025-08-25T18:30:59 IST" duration-ms="2234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:30:59 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:33:47 IST" duration-ms="168351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DXB, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flydubai, SKIP=, Depart From=IST, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:33:47 IST" name="tearDown" finished-at="2025-08-25T18:33:47 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:33:47 IST" name="setup" finished-at="2025-08-25T18:33:50 IST" duration-ms="2141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:33:50 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:36:29 IST" duration-ms="159505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=IST, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=flydubai, SKIP=, Depart From=DXB, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:36:29 IST" name="tearDown" finished-at="2025-08-25T18:36:30 IST" duration-ms="470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:36:30 IST" name="setup" finished-at="2025-08-25T18:36:41 IST" duration-ms="11377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:36:41 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:41:18 IST" duration-ms="277344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=DAC, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=airarabia, SKIP=, Depart From=SHJ, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:41:18 IST" name="tearDown" finished-at="2025-08-25T18:41:19 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:41:19 IST" name="setup" finished-at="2025-08-25T18:41:21 IST" duration-ms="2078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:41:21 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:45:58 IST" duration-ms="277155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=SHJ, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=airarabia, SKIP=, Depart From=DEL, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:45:58 IST" name="tearDown" finished-at="2025-08-25T18:45:58 IST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:45:58 IST" name="setup" finished-at="2025-08-25T18:46:00 IST" duration-ms="2030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.iween.testcase.TCCP_11.myTest(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="myTest(java.util.Map)[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:46:00 IST" name="myTest" data-provider="excelData" finished-at="2025-08-25T18:47:37 IST" duration-ms="97258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Going To=IST, AdultsCounts=1, InfantsCount=0, TravelClass=Economy, FlightCardBasedOnIndex=1, Suppiler=airarabia, SKIP=, Depart From=DAC, ChildrenCount=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.iween.testcase.TCCP_11@7d7758be]" started-at="2025-08-25T18:47:37 IST" name="tearDown" finished-at="2025-08-25T18:47:38 IST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.iween.testcase.TCCP_11 -->
    </test> <!--  onway Tests -->
  </suite> <!-- iween Test Suite -->
</testng-results>
